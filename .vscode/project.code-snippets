{
	// Place your BitMatrix workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"C++ Header File": {
		"prefix": "head",
		"description": "C++ Library Header File",
		"body": [
			"/**",
			" * ESP/Arduino ${1} Library",
			" * Copyright 2020 Frame Factory GmbH, Ralph Wiedemeier",
			" * License: MIT",
			" */",
			"",
			"#ifndef _ESP_${1/(.*)/${1:/upcase}/}_${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H",
			"#define _ESP_${1/(.*)/${1:/upcase}/}_${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H",
			"",
			"#include \"library.h\"",
			"",
			"F_BEGIN_NAMESPACE",
			"",
			"class ${2:$TM_FILENAME_BASE}",
			"{",
			"public:",
			"    ${2:$TM_FILENAME_BASE}();",
			"    virtual ~${2:$TM_FILENAME_BASE}() {}",
			"",
			"    $0",
			"};",
			"",
			"F_END_NAMESPACE",
			"",
			"#endif // _ESP_${1/(.*)/${1:/upcase}/}_${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H"
		]
	},
	"C++ Implementation File": {
		"prefix": "impl",
		"description": "C++ Library Implementation File",
		"body": [
			"/**",
			" * ESP/Arduino ${1} Library",
			" * Copyright 2020 Frame Factory GmbH, Ralph Wiedemeier",
			" * License: MIT",
			" */",
			"",
			"#include \"$TM_FILENAME_BASE.h\"",
			"",
			"F_USE_NAMESPACE",
			"",
			"${2:$TM_FILENAME_BASE}::${2:$TM_FILENAME_BASE}()",
			"{",
			"}",
			"$0"
		]
	}
}